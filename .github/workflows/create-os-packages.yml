name: Release, build and upload release assets
on:
  push:
    tags:
    - 'v*'

jobs:
  release-build-and-upload-deb-assets:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: master
    - run: |
        git fetch --all
    - name: Install build dependencies
      run: |
        sudo apt -y install python-setuptools debhelper dh-exec dh-python git-buildpackage
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Create upload_url artifact
      run: |
        echo ${{ steps.create_release.outputs.upload_url }} > ../upload_url.txt
    - name: Upload upload_url artifact
      uses: actions/upload-artifact@v1
      with:
        name: upload_url.txt
        path: ../upload_url.txt
    - name: Get version
      id: get_version
      run: |
        export version=$(<VERSION.txt)
        echo "::set-env name=verson::${version}"
        echo "::set-output name=version::${version}"
    - name: Build deb packages
      run: |
        gbp buildpackage --git-ignore-new --git-force-create --git-upstream-tree=SLOPPY --git-upstream-tag='v%(version)s' -uc -us
    - name: Upload python-patchman deb
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: ${{ format('python-patchman_{0}-1_all.deb', steps.get_version.outputs.version) }}
        asset_path: ../${{ format('python-patchman_{0}-1_all.deb', steps.get_version.outputs.version) }}
        asset_content_type: application/vnd.debian.binary-package
    - name: Upload patchman-client deb
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: ${{ format('patchman-client_{0}-1_all.deb', steps.get_version.outputs.version) }}
        asset_path: ../${{ format('patchman-client_{0}-1_all.deb', steps.get_version.outputs.version) }}
        asset_content_type: application/vnd.debian.binary-package
  build-and-upload-rpm-assets:
    runs-on: ubuntu-latest
    container:
      image: centos:7
    steps:
    - name: Install build dependencies
      run: |
        yum -y install epel-release
        rpm -U https://centos7.iuscommunity.org/ius-release.rpm
        yum makecache
        yum -y install rpm-build python-setuptools git222
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: master
    - run: |
        git fetch --all
    - name: Get version
      id: get_version
      run: |
        export version=$(<VERSION.txt)
        echo "::set-env name=verson::${version}"
        echo "::set-output name=version::${version}"
    - name: Download upload_url artifact
      uses: actions/download-artifact@v1
      with:
        name: upload_url.txt
    - name: Get upload_url
      id: get_upload_url
      run: |
        export upload_url=$(<upload_url.txt)
        pwd
        ls -l
        echo ${upload_url}
        echo "::set-env name=upload_url::${upload_url}"
        echo "::set-output name=upload_url::${upload_url}"
    - name: Build rpm packages
      run: |
        python setup.py bdist_rpm
        rpmbuild -bb patchman-client.spec
    - name: Upload patchman rpm
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
        asset_name: ${{ format('patchman-{0}-1.noarch.rpm', steps.get_version.outputs.version) }}
        asset_path: ${{ format('dist/patchman-{0}-1.noarch.rpm', steps.get_version.outputs.version) }}
        asset_content_type: application/x-rpm
    - name: Upload patchman-client rpm
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
        asset_name: ${{ format('patchman-client-{0}-1.noarch.rpm', steps.get_version.outputs.version) }}
        asset_path: ${{ format('dist/noarch/patchman-client-{0}-1.noarch.rpm', steps.get_version.outputs.version) }}
        asset_content_type: application/x-rpm
